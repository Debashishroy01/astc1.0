# Azure DevOps Pipeline for ASTC SAP Testing Platform
# Enterprise-grade CI/CD deployment

trigger:
  branches:
    include:
      - main
      - develop
  paths:
    exclude:
      - README.md
      - docs/*

variables:
  # Build variables
  pythonVersion: '3.11'
  azureServiceConnectionEndpoint: 'Azure-ServiceConnection'
  webAppName: 'astc-sap-testing-platform'
  environmentName: 'production'
  projectRoot: $(System.DefaultWorkingDirectory)
  
  # Security and compliance
  buildConfiguration: 'Release'
  
stages:
- stage: 'Build'
  displayName: 'Build and Test'
  jobs:
  - job: 'Build'
    displayName: 'Build Application'
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    
    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: 'Install dependencies'
    
    - script: |
        source antenv/bin/activate
        python -m pytest --junitxml=junit/test-results.xml --cov=. --cov-report=xml
      workingDirectory: $(projectRoot)
      displayName: 'Run tests with coverage'
      continueOnError: true
    
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/test-*.xml'
        testRunTitle: 'Publish test results for Python $(pythonVersion)'
    
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    
    - task: ArchiveFiles@2
      displayName: 'Archive application'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: 'Deploy'
  displayName: 'Deploy to Azure'
  dependsOn: Build
  condition: succeeded()
  
  jobs:
  - deployment: 'Deploy'
    displayName: 'Deploy ASTC Platform'
    pool:
      vmImage: 'ubuntu-latest'
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: $(azureServiceConnectionEndpoint)
              appType: 'webAppLinux'
              appName: $(webAppName)
              runtimeStack: 'PYTHON|3.11'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startupCommand: 'gunicorn --bind=0.0.0.0:8000 --timeout 600 app:app'
              
          - task: AzureAppServiceSettings@1
            displayName: 'Configure App Settings'
            inputs:
              azureSubscription: $(azureServiceConnectionEndpoint)
              appName: $(webAppName)
              resourceGroupName: $(resourceGroupName)
              appSettings: |
                [
                  {
                    "name": "PYTHONPATH",
                    "value": "/home/site/wwwroot",
                    "slotSetting": false
                  },
                  {
                    "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                    "value": "true",
                    "slotSetting": false
                  },
                  {
                    "name": "WEBSITES_PORT",
                    "value": "8000",
                    "slotSetting": false
                  },
                  {
                    "name": "WEBSITE_RUN_FROM_PACKAGE",
                    "value": "0",
                    "slotSetting": false
                  }
                ] 